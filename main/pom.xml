<?xml version="1.0" encoding="UTF-8"?>
<project
   xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <groupId>org.jmockit</groupId><artifactId>jmockit</artifactId><version>1.38.pp</version>
   <packaging>jar</packaging>

   <name>Main</name>
   <description>
      JMockit is a Java toolkit for automated developer testing.
      It contains APIs for the creation of the objects to be tested, for mocking dependencies, and for faking external
      APIs; JUnit (4 &amp; 5) and TestNG test runners are supported.
      It also contains an advanced code coverage tool.
   </description>
   <url>http://www.jmockit.org</url>
   <licenses>
      <license>
         <name>The MIT License</name>
         <url>http://www.opensource.org/licenses/mit-license.php</url>
      </license>
   </licenses>
   <developers>
      <developer><name>Rogério Liesenfeld</name></developer>
   </developers>
   <inceptionYear>2006</inceptionYear>
   <scm>
      <url>https://github.com/jmockit/jmockit1</url>
      <connection>scm:git:https://github.com/jmockit/jmockit1</connection>
   </scm>
   <issueManagement>
      <system>GitHub Issues</system>
      <url>https://github.com/jmockit/jmockit1/issues</url>
   </issueManagement>

   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
         <!-- github server corresponds to entry in ~/.m2/settings.xml -->
         <github.global.server>github</github.global.server>
   </properties>

   <distributionManagement>
      <repository>
         <id>internal.repo</id>
         <name>Temporary Staging Repository</name>
         <url>file://${project.build.directory}/mvn-repo</url>
      </repository>
   </distributionManagement>

   <build>
      <sourceDirectory>src</sourceDirectory>
      <testSourceDirectory>test</testSourceDirectory>
      <resources>
         <resource>
            <directory>.</directory>
            <includes>
               <include>META-INF/services/org.junit.platform.engine.TestEngine</include>
               <include>META-INF/services/org.testng.ITestNGListener</include>
            </includes>
         </resource>
         <resource>
            <directory>src</directory>
            <includes>
               <include>**/*.css</include>
               <include>**/*.js</include>
               <include>**/*.png</include>
            </includes>
         </resource>
         <resource>
            <directory>..</directory>
            <includes>
               <include>LICENSE.txt</include>
               <include>NOTICE.txt</include>
            </includes>
         </resource>
      </resources>
      <testResources>
         <testResource>
            <directory>test</directory>
            <includes><include>**/*.zip</include></includes>
         </testResource>
      </testResources>
      <plugins>
            <plugin>
               <artifactId>maven-deploy-plugin</artifactId>
               <version>2.8.1</version>
               <configuration>
                  <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
               </configuration>
            </plugin>
         <plugin>
            <artifactId>maven-enforcer-plugin</artifactId><version>1.4.1</version>
            <executions>
               <execution>
                  <goals><goal>enforce</goal></goals>
                  <configuration>
                     <rules>
                        <requireJavaVersion><version>1.8</version></requireJavaVersion>
                        <requireMavenVersion><version>3.3.1</version></requireMavenVersion>
                        <dependencyConvergence/>
                     </rules>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <artifactId>maven-compiler-plugin</artifactId><version>3.6.2</version>
            <configuration>
               <encoding>UTF-8</encoding>
               <source>1.7</source><target>1.7</target>
               <compilerArgs><arg>-Xlint:none</arg></compilerArgs>
               <useIncrementalCompilation>false</useIncrementalCompilation>
            </configuration>
         </plugin>
         <plugin>
            <artifactId>maven-jar-plugin</artifactId><version>3.0.2</version>
            <configuration>
               <archive>
                  <addMavenDescriptor>false</addMavenDescriptor>
                  <manifestEntries>
                     <Main-Class>mockit.coverage.CodeCoverage</Main-Class>
                     <Premain-Class>mockit.internal.startup.Startup</Premain-Class>
                     <Agent-Class>mockit.internal.startup.Startup</Agent-Class>
                     <Can-Redefine-Classes>true</Can-Redefine-Classes>
                     <Can-Retransform-Classes>true</Can-Retransform-Classes>
                     <Implementation-Version>${project.version}</Implementation-Version>
                     <Built-By/>
                  </manifestEntries>
               </archive>
            </configuration>
         </plugin>
         <plugin>
            <artifactId>maven-source-plugin</artifactId><version>3.0.1</version>
            <configuration>
               <excludes>
                  <exclude>*</exclude>
                  <exclude>**/*.css</exclude>
                  <exclude>**/*.js</exclude>
               </excludes>
            </configuration>
            <executions>
               <execution>
                  <id>attach-sources</id>
                  <goals><goal>jar-no-fork</goal></goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <artifactId>maven-javadoc-plugin</artifactId><version>2.10.4</version>
            <configuration>
               <encoding>UTF-8</encoding>
               <nodeprecated>true</nodeprecated>
               <noindex>true</noindex>
               <notree>true</notree>
               <nohelp>true</nohelp>
               <breakiterator>true</breakiterator>
               <use>false</use>
               <source>1.8</source>
               <windowtitle>JMockit Toolkit API</windowtitle>
               <doctitle>JMockit Toolkit API Documentation</doctitle>
               <stylesheetfile>${project.basedir}/../../jmockit.github.io/api1x/stylesheet.css</stylesheetfile>
               <overview>${project.basedir}/../../jmockit.github.io/api1x/overview.html</overview>
               <header><![CDATA[<a href="http://jmockit.org" target="_top"><img src="resources/logo.png">JMockit Home</a>]]></header>
               <footer><![CDATA[<a href="http://jmockit.org" target="_top"><img src="resources/logo.png">JMockit Home</a>]]></footer>
               <notimestamp>true</notimestamp>
               <quiet>true</quiet>
               <sourcepath>${basedir}/src</sourcepath>
               <subpackages>none</subpackages>
               <additionalparam>-Xdoclint:none mockit mockit.integration.junit4</additionalparam>
               <links>
                  <link>http://docs.oracle.com/javase/8/docs/api/</link>
                  <link>http://docs.oracle.com/javaee/7/api/</link>
               </links>
            </configuration>
            <executions>
               <execution>
                  <id>attach-javadocs</id>
                  <goals><goal>jar</goal></goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <artifactId>maven-surefire-plugin</artifactId><version>2.20</version>
            <configuration>
               <skipTests>true</skipTests>
               <disableXmlReport>true</disableXmlReport>
               <runOrder>alphabetical</runOrder>
            </configuration>
            <executions>
               <execution>
                  <id>JUnit-tests</id>
                  <phase>test</phase>
                  <goals><goal>test</goal></goals>
                  <configuration>
                     <skipTests>${skipTests}</skipTests>
                     <testNGArtifactName>none:none</testNGArtifactName>
                     <excludes>
                        <exclude>**/*$*</exclude>
                        <exclude>**/Base*Test.class</exclude>
                        <exclude>**/JUnit4DecoratorTest.class</exclude>
                        <exclude>**/testng/*Test.class</exclude>
                        <exclude>**/mockit/integration/TestedClass.class</exclude>
                     </excludes>
                  </configuration>
               </execution>
               <execution>
                  <id>TestNG-tests</id>
                  <phase>test</phase>
                  <goals><goal>test</goal></goals>
                  <configuration>
                     <skipTests>${skipTests}</skipTests>
                     <junitArtifactName>none:none</junitArtifactName>
                     <includes>
                        <include>**/testng/*Test.class</include>
                     </includes>
                     <excludes>
                        <exclude>**/TestNGViolatedExpectationsTest.class</exclude>
                     </excludes>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <artifactId>maven-gpg-plugin</artifactId><version>1.6</version>
            <executions>
               <execution>
                  <id>sign-artifacts</id>
                  <phase>deploy</phase>
                  <goals><goal>sign</goal></goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.sonatype.plugins</groupId><artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.8</version>
            <extensions>true</extensions>
            <configuration>
               <serverId>sonatype-nexus-staging</serverId>
               <nexusUrl>https://oss.sonatype.org/</nexusUrl>
               <autoReleaseAfterClose>true</autoReleaseAfterClose>
            </configuration>
         </plugin>
<!--
         <plugin>
            &lt;!&ndash; Deploy the web site &ndash;&gt;
            <groupId>com.github.github</groupId>
            <artifactId>site-maven-plugin</artifactId>
            <version>0.12</version>
            <executions>
               <execution>
                  <goals>
                     <goal>site</goal>
                  </goals>
                  &lt;!&ndash; select the Maven phase in which the plugin will be executed &ndash;&gt;
                  <phase>site-deploy</phase>
                  <configuration>
                     &lt;!&ndash; Plugin configuration ges here &ndash;&gt;

                     <server>github</server>

                     &lt;!&ndash; The commit message &ndash;&gt;
                     <message>Building site for my project</message>
                     &lt;!&ndash; The location where the site is uploaded &ndash;&gt;
                     &lt;!&ndash; Use merge or override the content &ndash;&gt;
                     <merge>true</merge>
                  </configuration>
               </execution>
            </executions>
         </plugin>
-->
         <plugin>
            <groupId>com.github.github</groupId>
            <artifactId>site-maven-plugin</artifactId>
            <version>0.11</version>
            <configuration>
               <message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
               <noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
               <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
               <branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
               <includes><include>**/*</include></includes>
               <repositoryName>jmockit1</repositoryName>      <!-- github repo name -->
               <repositoryOwner>neich</repositoryOwner>    <!-- github username  -->
            </configuration>
            <executions>
               <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
               <execution>
                  <goals>
                     <goal>site</goal>
                  </goals>
                  <phase>deploy</phase>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>

   <dependencies>
      <dependency>
         <groupId>com.google.code.findbugs</groupId><artifactId>jsr305</artifactId><version>3.0.2</version>
      </dependency>
      <dependency>
         <groupId>junit</groupId><artifactId>junit</artifactId><version>4.12</version>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>org.junit.jupiter</groupId><artifactId>junit-jupiter-engine</artifactId><version>5.0.2</version>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>org.testng</groupId><artifactId>testng</artifactId><version>6.13</version>
         <optional>true</optional>
         <exclusions>
            <exclusion><groupId>com.google.inject</groupId><artifactId>guice</artifactId></exclusion>
            <exclusion><groupId>org.beanshell</groupId><artifactId>bsh</artifactId></exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>javax</groupId><artifactId>javaee-api</artifactId><version>7.0</version>
         <optional>true</optional>
         <exclusions>
            <exclusion><groupId>com.sun.mail</groupId><artifactId>javax.mail</artifactId></exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId><artifactId>spring-web</artifactId><version>4.2.0.RELEASE</version>
         <optional>true</optional>
      </dependency>
   </dependencies>
</project>